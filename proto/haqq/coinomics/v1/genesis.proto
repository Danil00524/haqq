syntax = "proto3";
package haqq.coinomics.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

import "haqq/coinomics/v1/coinomics.proto";

option go_package = "github.com/haqq-network/haqq/x/coinomics/types";

// GenesisState defines the inflation module's genesis state.
message GenesisState {
  // params defines all the paramaters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];

  // current inflation rate
  string inflation = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
    (gogoproto.nullable) = false
  ];

  // current era number
  uint64 era = 3;

  // era started block number
  uint64 era_started_at_block = 4;

  // target mint for current era
  cosmos.base.v1beta1.Coin era_target_mint = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.moretags)   = "yaml:\"era_target_mint\"",
    (gogoproto.nullable)   = false
  ];

  // target supply for current era
  cosmos.base.v1beta1.Coin era_target_supply = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.moretags)   = "yaml:\"era_target_supply\"",
    (gogoproto.nullable)   = false
  ];

  // total target supply
  cosmos.base.v1beta1.Coin target_total_supply = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.moretags)   = "yaml:\"target_total_supply\"",
    (gogoproto.nullable)   = false
  ];
}

// Params holds parameters for the coinomics module.
message Params {
  // type of coin to mint
  string mint_denom = 1;

  // number of blocks per era
  uint64 blocks_per_era = 2;

  // parameter to enable coinmoics
  bool enable_coinomics = 3;

  // Mint distribution of the minted denom
  MintDistribution mint_distribution = 4
    [ (gogoproto.nullable) = false ];
}
